# # Simple workflow for deploying static content to GitHub Pages
# name: Deploy static content to Pages

# on:
#   # Runs on pushes targeting the default branch
#   create:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # Single deploy job since we're just deploying
#   testdeploy:
#     if: ${{ startsWith(github.ref, 'refs/tags/v') }}
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           # Upload entire repository
#           path: '.'
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v2

# This is a basic workflow to help you get started with Actions

name: prod-sample

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  create:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world